<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.meetlearning.dao.mapper.TextbookMapper">
    <resultMap id="BaseResultMap" type="org.example.meetlearning.dao.entity.Textbook">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="deleted" jdbcType="BIT" property="deleted"/>
        <result column="creator" jdbcType="VARCHAR" property="creator"/>
        <result column="create_name" jdbcType="VARCHAR" property="createName"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="updator" jdbcType="VARCHAR" property="updator"/>
        <result column="update_name" jdbcType="VARCHAR" property="updateName"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="record_id" jdbcType="VARCHAR" property="recordId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="level_begin" jdbcType="INTEGER" property="levelBegin"/>
        <result column="level_end" jdbcType="INTEGER" property="levelEnd"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
    </resultMap>

    <sql id="Base_Column_List">
        id
        , deleted, creator, create_name, create_time, updator, update_name, update_time, record_id, name, level_begin, level_end, `type`
    </sql>

    <select id="selectPageByParams" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from textbook
        <where>
            deleted = 0
            <include refid="where_common"/>
        </where>
        order by name asc
    </select>

    <select id="selectByParams" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from textbook
        <where>
            deleted = 0
            <include refid="where_common"/>
        </where>
        order by name asc
    </select>

    <select id="selectByRecordId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from textbook
        where record_id = #{recordId}
    </select>

    <sql id="where_common">
        <if test="params.keyword != null">
            and (name like LOWER(#{params.keyword}) or catalog like LOWER(#{params.keyword}))
        </if>
        <if test="params.recordIds != null">
            and record_id in
            <foreach collection="recordIds" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
    </sql>

    <insert id="insert" parameterType="org.example.meetlearning.dao.entity.Textbook">
        insert into textbook (deleted, creator,
                              create_name, create_time, updator,
                              update_name, update_time, record_id,
                              level_begin, level_end,
                              type, catalog, name)
        values (#{deleted,jdbcType=BIT}, #{creator,jdbcType=VARCHAR},
                #{createName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updator,jdbcType=VARCHAR},
                #{updateName,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{recordId,jdbcType=VARCHAR},
                #{levelBegin,jdbcType=INTEGER}, #{levelEnd,jdbcType=INTEGER},
                #{type,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR})
    </insert>

    <update id="deletedByRecordId">
        update textbook
        set deleted = 1
        where record_id = #{recordId}
    </update>

    <update id="update" parameterType="org.example.meetlearning.dao.entity.Textbook">
        update textbook
        <set>
            <if test="deleted != null">
                deleted = #{deleted,jdbcType=BIT},
            </if>
            <if test="creator != null">
                creator = #{creator,jdbcType=VARCHAR},
            </if>
            <if test="createName != null">
                create_name = #{createName,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updator != null">
                updator = #{updator,jdbcType=VARCHAR},
            </if>
            <if test="updateName != null">
                update_name = #{updateName,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="recordId != null">
                record_id = #{recordId,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="levelBegin != null">
                level_begin = #{levelBegin,jdbcType=INTEGER},
            </if>
            <if test="levelEnd != null">
                level_end = #{levelEnd,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>