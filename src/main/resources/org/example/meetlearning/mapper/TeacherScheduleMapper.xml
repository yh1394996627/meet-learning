<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.meetlearning.dao.mapper.TeacherScheduleMapper">
    <resultMap id="BaseResultMap" type="org.example.meetlearning.dao.entity.TeacherSchedule">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="creator" jdbcType="VARCHAR" property="creator"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="teacher_id" jdbcType="VARCHAR" property="teacherId"/>
        <result column="begin_time" jdbcType="VARCHAR" property="beginTime"/>
        <result column="end_time" jdbcType="VARCHAR" property="endTime"/>
        <result column="week_num" jdbcType="VARCHAR" property="weekNum"/>
        <result column="course_type" jdbcType="VARCHAR" property="courseType"/>
    </resultMap>
    <sql id="Base_Column_List">
        id
        , creator, create_time, teacher_id, begin_time, end_time, week_num, course_type
    </sql>
    <select id="selectByTeacherIdAndWeekNum" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from teacher_schedule
        where teacher_id = #{teacherId,jdbcType=VARCHAR} and week_num = #{weekNum,jdbcType=VARCHAR}
    </select>

    <select id="selectTeacherIdByWeekNumAndTime" resultType="java.lang.String">
        select teacher_id
        from teacher_schedule
        where week_num = #{weekNum,jdbcType=VARCHAR}
          and begin_time >= #{beginTime}
          and end_time &lt;= #{endTime}
    </select>

    <select id="selectByTeacherIdWeekNumGroupByTime" resultMap="BaseResultMap">
        select
        begin_time,end_time
        from teacher_schedule
        where week_num = #{weekNum,jdbcType=VARCHAR}
        <if test="teacherIds != null">
            and teacher_id in
            <foreach collection="teacherIds" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
        and begin_time is not null and end_time is not null
        group by begin_time,end_time
    </select>

    <select id="selectGroupTimeByParams" resultMap="BaseResultMap">
        select
        begin_time,end_time
        from teacher_schedule
        where week_num = #{weekNum,jdbcType=VARCHAR}
        <include refid="where_common"/>
        and begin_time is not null and end_time is not null
        group by begin_time,end_time
    </select>

    <sql id="where_common">
        <if test="params.teacherIds != null">
            and teacher_id in
            <foreach collection="params.teacherIds" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
        <if test="params.noTeacherIds != null">
            and teacher_id not in
            <foreach collection="params.noTeacherIds" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
        <if test="params.startTime != null">
            and begin_time &lt;= #{params.startTime}
        </if>
        <if test="params.stopTime != null">
            and end_time >= #{params.stopTime}
        </if>
    </sql>

    <delete id="deleteByTeacherIdAndWeekNum">
        delete
        from teacher_schedule
        where teacher_id = #{teacherId,jdbcType=VARCHAR}
          and week_num = #{weekNum,jdbcType=VARCHAR}
    </delete>

    <insert id="insertBatch" parameterType="list">
        insert into teacher_schedule (creator, create_time,
        teacher_id, begin_time, end_time,
        week_num,course_type)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.creator,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP},
            #{item.teacherId,jdbcType=VARCHAR}, #{item.beginTime,jdbcType=VARCHAR}, #{item.endTime,jdbcType=VARCHAR},
            #{item.weekNum,jdbcType=VARCHAR},#{item.courseType,jdbcType=VARCHAR})
        </foreach>
    </insert>
</mapper>